
> compound-interest-calculator@0.1.0 test
> jest

PASS src/__tests__/environment.test.ts
PASS src/utils/__tests__/calculations.test.ts
PASS src/utils/__tests__/performance.test.ts
  ΓùÅ Console

    console.log
      Standard calculation completed in 21.12ms

      at Object.log (src/utils/__tests__/performance.test.ts:56:13)

    console.log
      Long horizon calculation (50 years) completed in 28.13ms

      at Object.log (src/utils/__tests__/performance.test.ts:75:13)

    console.log
      Retirement phase calculation completed in 28.65ms

      at Object.log (src/utils/__tests__/performance.test.ts:100:13)

FAIL src/components/__tests__/Calculator.test.tsx
  ΓùÅ Console

    console.error
      Warning: An update to Calculator inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at Calculator (C:\Users\steph\Code Projects\temp\Compound_calculator\src\components\Calculator.tsx:94:39)

      430 |               <div className="pt-2">
      431 |                 <button
    > 432 |                   onClick={() => setShowAdvanced(!showAdvanced)}
          |                                  ^
      433 |                   className="text-sm text-accent-foreground flex items-center hover:underline transition-colors"
      434 |                 >
      435 |                   {showAdvanced ? "Hide" : "Show"} Advanced Parameters

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setShowAdvanced (src/components/Calculator.tsx:432:34)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (src/components/__tests__/Calculator.test.tsx:79:5)

    console.error
      Warning: An update to Calculator inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at Calculator (C:\Users\steph\Code Projects\temp\Compound_calculator\src\components\Calculator.tsx:94:39)

      430 |               <div className="pt-2">
      431 |                 <button
    > 432 |                   onClick={() => setShowAdvanced(!showAdvanced)}
          |                                  ^
      433 |                   className="text-sm text-accent-foreground flex items-center hover:underline transition-colors"
      434 |                 >
      435 |                   {showAdvanced ? "Hide" : "Show"} Advanced Parameters

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setShowAdvanced (src/components/Calculator.tsx:432:34)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (src/components/__tests__/Calculator.test.tsx:107:5)

    console.error
      Warning: An update to Calculator inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at Calculator (C:\Users\steph\Code Projects\temp\Compound_calculator\src\components\Calculator.tsx:94:39)

      430 |               <div className="pt-2">
      431 |                 <button
    > 432 |                   onClick={() => setShowAdvanced(!showAdvanced)}
          |                                  ^
      433 |                   className="text-sm text-accent-foreground flex items-center hover:underline transition-colors"
      434 |                 >
      435 |                   {showAdvanced ? "Hide" : "Show"} Advanced Parameters

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setShowAdvanced (src/components/Calculator.tsx:432:34)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (src/components/__tests__/Calculator.test.tsx:125:5)

  ΓùÅ Calculator Component ΓÇ║ allows users to input values

    TestingLibraryElementError: Found a label with the text of: /Initial Investment/i, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="space-y-12 py-6 md:py-8 animate-[slideUpFade_0.6s_ease-in-out]"
        >
          <div
            class="text-center max-w-4xl mx-auto"
          >
            <h1
              class="text-4xl md:text-5xl font-bold mb-4 md:mb-6 gradient-text"
            >
              Enhanced Compound Interest Calculator
            </h1>
            <p
              class="text-base md:text-lg text-muted-foreground"
            >
              Calculate your investment growth with advanced features like inflation adjustment, tax considerations, and market volatility.
            </p>
          </div>
          <div
            class="grid grid-cols-1 xl:grid-cols-12 gap-6 md:gap-8"
          >
            <div
              class="xl:col-span-5 2xl:col-span-4"
            >
              <div
                class="glass-card p-6 md:p-8 transition-all duration-300"
              >
                <h2
                  class="text-xl md:text-2xl font-semibold mb-6 md:mb-8 gradient-text"
                >
                  Investment Parameters
                </h2>
                <div
                  class="space-y-6"
                >
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Initial Investment
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you start investing with. This is your principal amount."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="10000"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Monthly Contribution
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you plan to add to your investment each month."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="500"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class=[32...

      59 |
      60 |     // Find the initial investment input
    > 61 |     const initialInvestmentInput = screen.getByLabelText(/Initial Investment/i);
         |                                           ^
      62 |
      63 |     // Change the value
      64 |     await userEvent.clear(initialInvestmentInput);

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/components/__tests__/Calculator.test.tsx:61:43)

  ΓùÅ Calculator Component ΓÇ║ performs calculation when calculate button is clicked

    TestingLibraryElementError: Unable to find an element by: [data-testid="responsive-container"]

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="space-y-12 py-6 md:py-8 animate-[slideUpFade_0.6s_ease-in-out]"
        >
          <div
            class="text-center max-w-4xl mx-auto"
          >
            <h1
              class="text-4xl md:text-5xl font-bold mb-4 md:mb-6 gradient-text"
            >
              Enhanced Compound Interest Calculator
            </h1>
            <p
              class="text-base md:text-lg text-muted-foreground"
            >
              Calculate your investment growth with advanced features like inflation adjustment, tax considerations, and market volatility.
            </p>
          </div>
          <div
            class="grid grid-cols-1 xl:grid-cols-12 gap-6 md:gap-8"
          >
            <div
              class="xl:col-span-5 2xl:col-span-4"
            >
              <div
                class="glass-card p-6 md:p-8 transition-all duration-300"
              >
                <h2
                  class="text-xl md:text-2xl font-semibold mb-6 md:mb-8 gradient-text"
                >
                  Investment Parameters
                </h2>
                <div
                  class="space-y-6"
                >
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Initial Investment
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you start investing with. This is your principal amount."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="10000"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Monthly Contribution
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you plan to add to your investment each month."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="500"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class=[32...

       97 |
       98 |     // Verify that the chart is rendered
    >  99 |     expect(screen.getByTestId("responsive-container")).toBeInTheDocument();
          |                   ^
      100 |   });
      101 |
      102 |   it("displays account type options correctly", async () => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByTestId (src/components/__tests__/Calculator.test.tsx:99:19)

  ΓùÅ Calculator Component ΓÇ║ displays account type options correctly

    TestingLibraryElementError: Found a label with the text of: /Account Type/i, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="space-y-12 py-6 md:py-8 animate-[slideUpFade_0.6s_ease-in-out]"
        >
          <div
            class="text-center max-w-4xl mx-auto"
          >
            <h1
              class="text-4xl md:text-5xl font-bold mb-4 md:mb-6 gradient-text"
            >
              Enhanced Compound Interest Calculator
            </h1>
            <p
              class="text-base md:text-lg text-muted-foreground"
            >
              Calculate your investment growth with advanced features like inflation adjustment, tax considerations, and market volatility.
            </p>
          </div>
          <div
            class="grid grid-cols-1 xl:grid-cols-12 gap-6 md:gap-8"
          >
            <div
              class="xl:col-span-5 2xl:col-span-4"
            >
              <div
                class="glass-card p-6 md:p-8 transition-all duration-300"
              >
                <h2
                  class="text-xl md:text-2xl font-semibold mb-6 md:mb-8 gradient-text"
                >
                  Investment Parameters
                </h2>
                <div
                  class="space-y-6"
                >
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Initial Investment
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you start investing with. This is your principal amount."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="10000"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Monthly Contribution
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you plan to add to your investment each month."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="500"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class=[32...

      108 |
      109 |     // Check that we can see the account type selector
    > 110 |     const accountTypeSelector = screen.getByLabelText(/Account Type/i);
          |                                        ^
      111 |     expect(accountTypeSelector).toBeInTheDocument();
      112 |
      113 |     // Select a different account type

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/components/__tests__/Calculator.test.tsx:110:40)

  ΓùÅ Calculator Component ΓÇ║ handles mixed account type allocation

    TestingLibraryElementError: Found a label with the text of: /Account Type/i, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="space-y-12 py-6 md:py-8 animate-[slideUpFade_0.6s_ease-in-out]"
        >
          <div
            class="text-center max-w-4xl mx-auto"
          >
            <h1
              class="text-4xl md:text-5xl font-bold mb-4 md:mb-6 gradient-text"
            >
              Enhanced Compound Interest Calculator
            </h1>
            <p
              class="text-base md:text-lg text-muted-foreground"
            >
              Calculate your investment growth with advanced features like inflation adjustment, tax considerations, and market volatility.
            </p>
          </div>
          <div
            class="grid grid-cols-1 xl:grid-cols-12 gap-6 md:gap-8"
          >
            <div
              class="xl:col-span-5 2xl:col-span-4"
            >
              <div
                class="glass-card p-6 md:p-8 transition-all duration-300"
              >
                <h2
                  class="text-xl md:text-2xl font-semibold mb-6 md:mb-8 gradient-text"
                >
                  Investment Parameters
                </h2>
                <div
                  class="space-y-6"
                >
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Initial Investment
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you start investing with. This is your principal amount."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="10000"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class="flex justify-between"
                    >
                      <label
                        class="block text-sm font-medium mb-2 transition-colors"
                      >
                        Monthly Contribution
                      </label>
                      <div
                        class="tooltip"
                        data-tooltip="The amount you plan to add to your investment each month."
                      >
                        <svg
                          class="w-4 h-4 text-muted-foreground"
                          fill="none"
                          stroke="currentColor"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="12"
                            cy="12"
                            r="10"
                          />
                          <path
                            d="M12 16v-4M12 8h.01"
                          />
                        </svg>
                      </div>
                    </div>
                    <div
                      class="relative"
                    >
                      <span
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                      >
                        $
                      </span>
                      <input
                        class="w-full pl-7 pr-3 py-3 bg-background/50 border border-border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200"
                        min="0"
                        type="number"
                        value="500"
                      />
                    </div>
                  </div>
                  <div
                    class="group"
                  >
                    <div
                      class=[32...

      126 |
      127 |     // Select mixed account type
    > 128 |     const accountTypeSelector = screen.getByLabelText(/Account Type/i);
          |                                        ^
      129 |     await userEvent.selectOptions(accountTypeSelector, "mixed");
      130 |
      131 |     // Check that allocation controls are now shown

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/components/__tests__/Calculator.test.tsx:128:40)

------------------|---------|----------|---------|---------|----------------------------------------------------------
File              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                        
------------------|---------|----------|---------|---------|----------------------------------------------------------
All files         |   78.03 |    62.72 |    22.5 |    80.5 |                                                          
 app              |       0 |      100 |       0 |       0 |                                                          
  layout.tsx      |       0 |      100 |       0 |       0 | 2-21                                                     
  page.tsx        |       0 |      100 |       0 |       0 | 1-3                                                      
 components       |    37.5 |    19.51 |   12.12 |   43.63 |                                                          
  Calculator.tsx  |    37.5 |    19.51 |   12.12 |   43.63 | 105,114-124,139-142,155-157,162-172,176,240-414,486-1114 
 utils            |   96.15 |     88.4 |     100 |   95.95 |                                                          
  calculations.ts |   96.15 |     88.4 |     100 |   95.95 | 148-151,187-190                                          
------------------|---------|----------|---------|---------|----------------------------------------------------------
Test Suites: 1 failed, 3 passed, 4 total
Tests:       4 failed, 12 passed, 16 total
Snapshots:   0 total
Time:        4.456 s
Ran all test suites.
